<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>LALRPOP 高级设置 手册/教程-中文翻译 | LALRPOP Advanced setup</title>
    <link href="/posts/2023/21239/"/>
    <url>/posts/2023/21239/</url>
    
    <content type="html"><![CDATA[<p>🌸 樱花开头的内容为译者添加<br>🌸 翻译自 <a href="http://lalrpop.github.io/lalrpop/index.html">LALRPOP教程</a><br>🌸 导航: <strong><a href="/posts/2023/%E6%9C%AA%E5%AE%8C%E6%88%90/">&lt;&lt;[上篇-未完成]</a> - <a href="/posts/2023/11467/">[目录]</a> - <a href="/posts/2023/21239/">[下篇-这是最后一篇]&gt;&gt;</a></strong></p><h1 id="高级设置-Advanced-setup"><a href="#高级设置-Advanced-setup" class="headerlink" title="高级设置|Advanced setup"></a>高级设置|Advanced setup</h1><p>当你设置 LALRPOP 时, 你创建了一个 <code>build.rs</code> 文件, 看起来像这样:</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs rust"><span class="hljs-keyword">extern</span> <span class="hljs-keyword">crate</span> lalrpop;<br><br><span class="hljs-keyword">fn</span> <span class="hljs-title function_">main</span>() &#123;<br>    lalrpop::<span class="hljs-title function_ invoke__">process_root</span>().<span class="hljs-title function_ invoke__">unwrap</span>();<br>&#125;<br></code></pre></td></tr></table></figure><p>这个 <code>process_root()</code> 调用只是使用了默认的配置. 所以它会在*当前路径(in-place)*（在你的<code>src</code>目录下）下把<code>.lalrpop</code>文件转化为<code>.rs</code>文件. 而且只有在 <code>.lalrpop</code> 文件发生改变时才会进行. 但是你也可以使用<a href="https://docs.rs/lalrpop/*/lalrpop/struct.Configuration.html"><code>Configuration</code></a> 结构来获得更精确(detailed)的控制. </p><p>比如, 想要<strong>强制</strong>在输出中使用颜色（忽略TTY设置）, 你这样修改你的<code>build.rs</code>. </p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs rust"><span class="hljs-keyword">extern</span> <span class="hljs-keyword">crate</span> lalrpop;<br><br><span class="hljs-keyword">fn</span> <span class="hljs-title function_">main</span>() &#123;<br>    lalrpop::Configuration::<span class="hljs-title function_ invoke__">new</span>()<br>        .<span class="hljs-title function_ invoke__">always_use_colors</span>()  <span class="hljs-comment">// 🌸 添加这行</span><br>        .<span class="hljs-title function_ invoke__">process_current_dir</span>();<br>&#125;<br></code></pre></td></tr></table></figure><md id="generate_in_source">  <h2 id="在源代码树中生成-Generate-in-source-tree"><a href="#在源代码树中生成-Generate-in-source-tree" class="headerlink" title="在源代码树中生成|Generate in source tree"></a>在源代码树中生成|Generate in source tree</h2><p>🌸 <a href="http://lalrpop.github.io/lalrpop/generate_in_source.html">原文</a>为单独一页 现在将其整合为一页</p><p>在0.15版本以前, LALRPOP 是在输入文件的同一目录下生成文件. 从0.16开始, 文件生成在Cargo的<strong>输出目录</strong>. </p><p>如果你想保持以前的习惯, 你可以调用<code>generate_in_source_tree</code>.<br>在你的配置中:</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs rust"><span class="hljs-keyword">extern</span> <span class="hljs-keyword">crate</span> lalrpop;<br><br><span class="hljs-keyword">fn</span> <span class="hljs-title function_">main</span>() &#123;<br>    lalrpop::Configuration::<span class="hljs-title function_ invoke__">new</span>()<br>        .<span class="hljs-title function_ invoke__">generate_in_source_tree</span>() <span class="hljs-comment">//🌸 添加这行</span><br>        .<span class="hljs-title function_ invoke__">process</span>();<br>&#125;<br></code></pre></td></tr></table></figure><p>对于每一个 <code>foo.lalrpop</code> 文件, 你可以简单地在你的源代码树中设置<code>mod foo;</code>. <code>lalrpop_mod</code>宏在这种模式下不是很有用. </p></md>]]></content>
    
    
    <categories>
      
      <category>LALRPOP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LALRPOP</tag>
      
      <tag>Rust</tag>
      
      <tag>翻译</tag>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LALRPOP 解析器基础速成 手册/教程-中文翻译 | LALRPOP Crash course on parsers</title>
    <link href="/posts/2023/51562/"/>
    <url>/posts/2023/51562/</url>
    
    <content type="html"><![CDATA[<p>🌸 樱花开头的内容为译者添加<br>🌸 翻译自 <a href="http://lalrpop.github.io/lalrpop/index.html">LALRPOP教程</a>, 这篇为基础速成, 如有基础可跳过, 正式内容在下一篇<br>🌸 导航: <strong><a href="/posts/2023/11467/#LALRPOP">&lt;&lt;[上篇-介绍]</a> - <a href="/posts/2023/11467/">[目录]</a> - <a href="/posts/2023/17808/">[下篇-快速开始]&gt;&gt;</a></strong><br>🌸 在下文中 grammar 译作 语法； Term不译</p><h1 id="解析器基础速成-Crash-course-on-parsers"><a href="#解析器基础速成-Crash-course-on-parsers" class="headerlink" title="解析器基础速成 | Crash course on parsers"></a>解析器基础速成 | Crash course on parsers</h1><p>如果你以前从未使用过分析程序生成器(parser generator), 或者对上下文无关文法(context-free grammars)并不熟悉,这节只是<strong>非常简要地</strong>介绍一下这个基本概念. 语法(grammar)是一种很好的方式, 可以写出哪些类型的输入是合法的.<br>在我们的例子中, 我们想支持括号内的数字, 像<code>123</code>, <code>(123)</code>等.我们可以用一个简单的语法来表达这一点, 比如:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">Term</span> = Num | <span class="hljs-string">&quot;(&quot;</span> Term <span class="hljs-string">&quot;)&quot;</span><br></code></pre></td></tr></table></figure><p>在这里, 我们说我们试图解析一个<strong>Term(术语)</strong>, 一个Term可以是一个数字(<code>Num</code>)或其他括号内的Term(这里我们没有定义什么是数字, 但在真正的 LALRPOP 例子中, 我们将用正则表达式来定义). 现在想象一个潜在的输入如<code>((123))</code>. 我们可以通过写出一个叫做 “解析树(parse tree)” 的东西来说明如何解析这个数字:</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">(  (  1  2  3  )  )<br>|<span class="hljs-string">  </span>|<span class="hljs-string">  </span>|<span class="hljs-string">     </span>|<span class="hljs-string">  </span>|<span class="hljs-string">  </span>|<br>|<span class="hljs-string">  </span>|<span class="hljs-string">  +-Num-+  </span>|<span class="hljs-string">  </span>|<br>|<span class="hljs-string">  </span>|<span class="hljs-string">     </span>|<span class="hljs-string">     </span>|<span class="hljs-string">  </span>|<br>|<span class="hljs-string">  </span>|<span class="hljs-string">   Term    </span>|<span class="hljs-string">  </span>|<br>|<span class="hljs-string">  </span>|<span class="hljs-string">     </span>|<span class="hljs-string">     </span>|<span class="hljs-string">  </span>|<br>|<span class="hljs-string">  +---Term----+  </span>|<br>|<span class="hljs-string">        </span>|<span class="hljs-string">        </span>|<br>+------Term-------+<br></code></pre></td></tr></table></figure><p>这里你可以看到, 我们解析<code>((123))</code>的方法是在中间找到一个<code>Num</code>, 把这个<code>Num</code>称为<code>Term</code>, 然后匹配小括号, 在这个基础上形成另外两个Term.  </p><p>注意, 这个解析树不是一个数据结构, 而是解析的可视化. 我的意思是, 你<em>可以</em>建立一个解析树作为一个数据结构, 但通常你不会这样做: 因为你不需要这么详细.比如, 你可能对从 <code>Num</code> 到 <code>Term</code> 的无操作转换并不感兴趣. 关于解析树的另一个讨厌(weird)之处在于它与你的语法密切相关, 但往往你需要解析一些现有的数据结构 – 所以如果你建立了一个解析树, 那么你就必须将解析树转换为这些数据结构, 这可能是烦人的.  </p><p>🌸 (非)终结符 可以暂时通俗理解为 (不)可继续进行推到的字符<br>因此, 分析程序生成器通常做的是让你选择如何表示解析树中的每个节点, 以及如何进行转换. 你给每个非终结符(nonterminal)一个类型, 它可以是任何Rust中的类型, 你写的代码将在每次解析树中的新节点被构建时执行. 实际上, 在后面的例子中, 我们最终会建立类似于解析树的东西, 但在开始时, 我们根本不会这样做. 相反, 我们将把每个数字和 term 表示为一个 <code>i32</code> , 并且我们将在节点周围传播这个值.   </p><p>为了使之更具体, 这里有一个用 LALRPOP 编写的上述语法(🌸<code>Term=Num|&quot;(&quot; Term &quot;)&quot;</code>)的版本(在后面详细的教程中会再次讲解). 你可以看到 <code>Term</code> 非终结符被赋予了 <code>i32</code> 类型, 每个定义都有一些代码跟在 <code>=&gt;</code> 符号后面.这些是将要执行的代码, 该代码会将匹配的内容(如数字或括号内的)Term转换为 <code>i32</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs lalrpop">Term: i32 = &#123;<br>    Num =&gt; /* ... number code ... */,<br>    &quot;(&quot; Term &quot;)&quot; =&gt; /* ... parenthesized code ... */,<br>&#125;;<br></code></pre></td></tr></table></figure><p>OK, 基础知识到此为止足够了, 让我们正式的开始吧!  </p>]]></content>
    
    
    <categories>
      
      <category>LALRPOP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LALRPOP</tag>
      
      <tag>Rust</tag>
      
      <tag>翻译</tag>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LALRPOP 快速开始 导航/手册/教程-中文翻译 | LALRPOP Quick start guide</title>
    <link href="/posts/2023/17808/"/>
    <url>/posts/2023/17808/</url>
    
    <content type="html"><![CDATA[<p>🌸 樱花开头的内容为译者添加<br>🌸 翻译自 <a href="http://lalrpop.github.io/lalrpop/index.html">LALRPOP教程</a><br>🌸 导航: <strong><a href="/posts/2023/51562/">&lt;&lt;[上篇-基础速成]</a> - <a href="/posts/2023/11467/">[目录]</a> - <a href="/posts/2023/17808/">[下篇-未完成]&gt;&gt;</a></strong></p><h1 id="快速开始-Quick-start"><a href="#快速开始-Quick-start" class="headerlink" title="快速开始 | Quick start"></a>快速开始 | Quick start</h1><p>要开始使用 LALRPOP, 最好是阅读<a href="tutorial/index.md">教程</a>, 它将向你介绍 LALRPOP 文件的语法, 等等.<br>但是如果你以前做过这个, 或者你是那种<em>没有耐心</em>的人.这里有一个快速的 “小抄”, 用于设置你的项目. 首先, 添加以下几行到你的 <code>Cargo.toml</code>:</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs toml"><span class="hljs-section">[package]</span><br>...<br><span class="hljs-attr">build</span> = <span class="hljs-string">&quot;build.rs&quot;</span> <span class="hljs-comment"># LALRPOP preprocessing</span><br><br><span class="hljs-comment"># 生成的代码依赖于 lalrpop-util.</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># 生成的标志器依赖于 regex crate.</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># (如果你写了自己的标记器,或者已经有了 regex crate，你可以跳过这个依赖)</span><br><span class="hljs-section">[dependencies]</span><br><span class="hljs-attr">lalrpop-util</span> = <span class="hljs-string">&quot;0.19.8&quot;</span><br><span class="hljs-attr">regex</span> = <span class="hljs-string">&quot;1&quot;</span><br><br><span class="hljs-comment"># 添加构建时的 lalrpop 依赖:</span><br><span class="hljs-section">[build-dependencies]</span><br><span class="hljs-attr">lalrpop</span> = <span class="hljs-string">&quot;0.19.8&quot;</span><br><br><span class="hljs-comment"># 如果你提供你自己的外部 lexer，你可以通过禁用 default-features 来使其不包括内置 lexer 功能。</span><br><span class="hljs-comment"># lalrpop = &#123; version = &quot;0.19.1&quot;, default-features = false &#125;</span><br></code></pre></td></tr></table></figure><p>接下来创建一个 <a href="https://doc.rust-lang.org/cargo/reference/build-scripts.html"><code>build.rs</code></a> 文件, 看起来像这样:</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs rust"><span class="hljs-keyword">extern</span> <span class="hljs-keyword">crate</span> lalrpop;<br><br><span class="hljs-keyword">fn</span> <span class="hljs-title function_">main</span>() &#123;<br>    lalrpop::<span class="hljs-title function_ invoke__">process_root</span>().<span class="hljs-title function_ invoke__">unwrap</span>();<br>&#125;<br></code></pre></td></tr></table></figure><p>(如果你已经有一个<code>build.rs</code>文件了, 无论该文件在做什么, 你可以直接调用<code>process_root</code>)</p><p>这就行了, 注意<code>process_root</code>只是使用默认设置.<br>如果你想配置 LALRPOP 的执行方式, 请看 <a href="/posts/2023/21239/">高级设置|Advanced setup</a>.  </p><h2 id="手动运行"><a href="#手动运行" class="headerlink" title="手动运行"></a>手动运行</h2><p>如果你愿意, 你也可以将 “lalrpop “crate作为一个可执行文件.只需运行<code>cargo install lalrpop</code>, 然后你就会得到一个可执行的二进制文件, 像这样:</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">lalrpop <span class="hljs-built_in">file</span>.lalrpop<br></code></pre></td></tr></table></figure><p>这将为你生成<code>file.rs</code>.注意, 它只在<code>file.lalrpop</code>比<code>file.rs</code>新的情况下执行<br>如果你想无条件地执行, 请传递参数<code>-f</code>（也可以尝试<code>--help</code>以获得其他选项）.</p>]]></content>
    
    
    <categories>
      
      <category>LALRPOP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LALRPOP</tag>
      
      <tag>Rust</tag>
      
      <tag>翻译</tag>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LALRPOP 目录&amp;介绍 手册/教程-中文翻译 | LALRPOP Readme Summary</title>
    <link href="/posts/2023/11467/"/>
    <url>/posts/2023/11467/</url>
    
    <content type="html"><![CDATA[<p>🌸 樱花开头的内容为译者添加<br>🌸 翻译自 <a href="http://lalrpop.github.io/lalrpop/index.html">LALRPOP教程</a><br>🌸 这篇是介绍&amp;目录部分,  目录为双语目录,  链接为译文链接<br>🌸 施工中… 英文目录为未翻译</p><h1 id="目录-Summary"><a href="#目录-Summary" class="headerlink" title="目录 Summary"></a>目录 Summary</h1><ul><li><a href="/posts/2023/11467/">LALRPOP介绍&amp;目录(本文)</a></li><li><a href="/posts/2023/51562/">解析器基础速成|Crash course on parsers</a></li><li><a href="/posts/2023/17808/">快速开始|Quick start guide</a></li><li><a href="tutorial/index.md">手册|Tutorial</a><ul><li><a href="tutorial/001_adding_lalrpop.md">Adding LALRPOP to your project</a></li><li><a href="tutorial/002_paren_numbers.md">Parsing parenthesized numbers</a></li><li><a href="tutorial/003_type_inference.md">Type inference</a></li><li><a href="tutorial/004_full_expressions.md">Handling full expressions</a></li><li><a href="tutorial/005_building_asts.md">Building ASTs</a></li><li><a href="tutorial/006_macros.md">Macros</a></li><li><a href="tutorial/007_fallible_actions.md">Fallible actions</a></li><li><a href="tutorial/008_error_recovery.md">Error recovery</a></li><li><a href="tutorial/009_state_parameter.md">Passing state parameter</a></li></ul></li><li><a href="lexer_tutorial/index.md">Controlling the lexer</a><ul><li><a href="lexer_tutorial/001_lexer_gen.md">LALRPOP’s lexer generator</a></li><li><a href="lexer_tutorial/002_writing_custom_lexer.md">Writing a custom lexer</a></li><li><a href="lexer_tutorial/003_token_references.md">Using tokens with references</a></li></ul></li><li><a href="/posts/2023/21239/">高级设置|Advanced setup</a><ul><li><a href="/posts/2023/21239/#generate_in_source">在源代码树中生成|Generate in source tree</a></li></ul></li></ul><hr><h1 id="LALRPOP"><a href="#LALRPOP" class="headerlink" title="LALRPOP"></a>LALRPOP</h1><p>LALRPOP 是一个分析程序生成器(parser generator), 原理上类似于 <a href="http://dinosaur.compilertools.net/yacc/">YACC</a> (🌸404 Not Found),  <a href="http://www.antlr.org/">ANTLR</a>,  <a href="http://gallium.inria.fr/~fpottier/menhir/">Menhir</a> , 以及其他此类程序.<br>总的来说, 它的宏伟目标是成为有史以来最有用的分析程序生成器. 这个目标肯定没有完全实现：现在, 它是比较普通(fairly standard)的, 甚至在某些方面有点不合格. 但是, 它还很年轻.   </p><p>这份文件大部分内容在描述 LALRPOP 当前的状况,  部分内容包括了对未来计划中的变化的说明.   </p><hr><md id="conditional-compilation"><h2 id="conditional-compilation-md"><a href="#conditional-compilation-md" class="headerlink" title="conditional-compilation.md"></a>conditional-compilation.md</h2><p>🌸 该内容独暂一页, 但没有任何链接指向该页面, 推测该内容还在编写中, 但已经4年没有更新了, 所以暂时将此内容放置在此</p><p>LALRPOP 支持通过 <code>#[cfg(feature = &quot;FEATUERE&quot;)]</code> 属性对 公共非终结符声明 进行条件性编译.<br>如果在构建脚本中运行, LALRPOP 将自动从 <code>cargo</code> 中获取特性并使用这些特性.<br>另外, 也可以使用 <code>Configuration</code> 类型来设置明确的特征集(features set). </p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs rust"><span class="hljs-meta">#[cfg(feature = <span class="hljs-string">&quot;FEATURE&quot;</span>)]</span><br><span class="hljs-keyword">pub</span> MyRule : () = &#123;<br>    ...<br>&#125;;<br></code></pre></td></tr></table></figure></md>]]></content>
    
    
    <categories>
      
      <category>LALRPOP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LALRPOP</tag>
      
      <tag>Rust</tag>
      
      <tag>翻译</tag>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>砖家建议不要建议&amp;专家都说了些什么</title>
    <link href="/posts/2023/28310/"/>
    <url>/posts/2023/28310/</url>
    
    <content type="html"><![CDATA[<h2 id="砖家–何不食肉糜"><a href="#砖家–何不食肉糜" class="headerlink" title="砖家–何不食肉糜"></a>砖家–何不食肉糜</h2><p><img src="/posts/2023/28310/%E5%9C%A3%E4%BA%BA.png" alt="圣人"></p><h3 id="经济学教授-林采宜-老百姓有钱，油价上涨无所谓"><a href="#经济学教授-林采宜-老百姓有钱，油价上涨无所谓" class="headerlink" title="[经济学教授-林采宜] 老百姓有钱，油价上涨无所谓"></a>[经济学教授-林采宜] 老百姓有钱，油价上涨无所谓</h3><h3 id="博士生导师-翟翌-，发表了一篇名为《以养老金为抓手，推动中国老人接种疫苗》"><a href="#博士生导师-翟翌-，发表了一篇名为《以养老金为抓手，推动中国老人接种疫苗》" class="headerlink" title="[博士生导师-翟翌]，发表了一篇名为《以养老金为抓手，推动中国老人接种疫苗》"></a>[博士生导师-翟翌]，发表了一篇名为《以养老金为抓手，推动中国老人接种疫苗》</h3><h3 id="浙江财院教授-谢作诗-收入低的男人，可以几个人合起来找一个老婆"><a href="#浙江财院教授-谢作诗-收入低的男人，可以几个人合起来找一个老婆" class="headerlink" title="[浙江财院教授-谢作诗] 收入低的男人，可以几个人合起来找一个老婆"></a>[浙江财院教授-谢作诗] 收入低的男人，可以几个人合起来找一个老婆</h3><h3 id="昆明市政协委员-胡开林-历史说明中国贫富差距越大越好"><a href="#昆明市政协委员-胡开林-历史说明中国贫富差距越大越好" class="headerlink" title="[昆明市政协委员-胡开林] 历史说明中国贫富差距越大越好"></a>[昆明市政协委员-胡开林] 历史说明中国贫富差距越大越好</h3><h3 id="厦门大学教授-赵燕菁-适当处罚不生孩子的年轻人"><a href="#厦门大学教授-赵燕菁-适当处罚不生孩子的年轻人" class="headerlink" title="[厦门大学教授-赵燕菁]适当处罚不生孩子的年轻人"></a>[厦门大学教授-赵燕菁]适当处罚不生孩子的年轻人</h3><h3 id="全国工商联常委-丁佐宏-66岁到79岁仍是中年，要鼓励60岁以上初老群体再就业"><a href="#全国工商联常委-丁佐宏-66岁到79岁仍是中年，要鼓励60岁以上初老群体再就业" class="headerlink" title="[全国工商联常委-丁佐宏]66岁到79岁仍是中年，要鼓励60岁以上初老群体再就业"></a>[全国工商联常委-丁佐宏]66岁到79岁仍是中年，要鼓励60岁以上初老群体再就业</h3><h3 id="社会数据研究中心主任-许宪春-低收入人群可以出租闲置房或者用私家车拉活增加收入"><a href="#社会数据研究中心主任-许宪春-低收入人群可以出租闲置房或者用私家车拉活增加收入" class="headerlink" title="[社会数据研究中心主任-许宪春] 低收入人群可以出租闲置房或者用私家车拉活增加收入"></a>[社会数据研究中心主任-许宪春] 低收入人群可以出租闲置房或者用私家车拉活增加收入</h3><h3 id="经济学家-陈浩-国内家庭平均总资产300万正常，现在谁家还没有个50万的现金呢"><a href="#经济学家-陈浩-国内家庭平均总资产300万正常，现在谁家还没有个50万的现金呢" class="headerlink" title="[经济学家-陈浩] 国内家庭平均总资产300万正常，现在谁家还没有个50万的现金呢"></a>[经济学家-陈浩] 国内家庭平均总资产300万正常，现在谁家还没有个50万的现金呢</h3><h3 id="人口经济学家-梁建章-年轻人如果暂时找不到工作，可以先去结婚生子"><a href="#人口经济学家-梁建章-年轻人如果暂时找不到工作，可以先去结婚生子" class="headerlink" title="[人口经济学家-梁建章] 年轻人如果暂时找不到工作，可以先去结婚生子"></a>[人口经济学家-梁建章] 年轻人如果暂时找不到工作，可以先去结婚生子</h3><h3 id="全国人大代表、小康集团董事长-张兴海-建议年轻人多进厂打工，鼓励支持年轻人争当产业工人，这样才有助于制造业的发展，不能只考虑个人收入"><a href="#全国人大代表、小康集团董事长-张兴海-建议年轻人多进厂打工，鼓励支持年轻人争当产业工人，这样才有助于制造业的发展，不能只考虑个人收入" class="headerlink" title="[全国人大代表、小康集团董事长-张兴海] 建议年轻人多进厂打工，鼓励支持年轻人争当产业工人，这样才有助于制造业的发展，不能只考虑个人收入"></a>[全国人大代表、小康集团董事长-张兴海] 建议年轻人多进厂打工，鼓励支持年轻人争当产业工人，这样才有助于制造业的发展，不能只考虑个人收入</h3><p>注意: 多人重名 注意辨别<br>张兴海：男，1963年8月出生，中国国籍，高级管理人员工商管理硕士，经济师，中国汽车人才研究会理事会副理事长，重庆汽车工程学会副理事长。<br>曾荣获全国非公有制经济人士优秀中国特色社会主义事业建设者、中国光彩事业奖章、重庆市第四届劳动模范、全国“关爱员工优秀民营企业家”、全国抗震救灾先进个人、振兴重庆争光贡献奖、重庆市首届十大慈善人物等。<br>曾任巴县凤凰电器弹簧厂厂长，重庆渝安创新科技（集团）有限公司董事长，重庆小康汽车集团有限公司董事长、总裁，东风小康汽车有限公司总经理。<br>现任公司董事长兼总裁。</p><h2 id="争议–反讽或洗白"><a href="#争议–反讽或洗白" class="headerlink" title="争议–反讽或洗白?"></a>争议–反讽或洗白?</h2><h3 id="反讽-经济学家-许石林-：强烈建议恢复民跪官制"><a href="#反讽-经济学家-许石林-：强烈建议恢复民跪官制" class="headerlink" title="[*反讽-经济学家-许石林]：强烈建议恢复民跪官制"></a>[*反讽-经济学家-许石林]：强烈建议恢复民跪官制</h3><p>总结:  许石林并非经济学家，而是杂文作家，主要成就有 首届中国鲁迅杂文奖 广东省鲁迅文艺奖 广东省有为文学奖.<br>文章摘要:<br>其实我愿意见官下跪，以便让官更像官，让官有官威、官仪、官气，所谓君君臣臣、官官民民、上上下下嘛。官们内心无不希望小民下跪才行……于是，官没责任了。不把官们称父母官，官就不爱民如子了，也不做民之楷模了。所以，强烈建议恢复民跪官制。<br>作者详情:<br>国家一级作家、中国作家协会会员，深圳市文艺评论家协会副主席、深圳市杂文学会会长、深圳市非物质文化遗产保护专家、中华吟诵学会理事、中国古琴学会专业委员会会员、中国传媒大学客座教授。曾获首届中国鲁迅杂文奖、广东省鲁迅文艺奖、广东省有为文学奖。</p><h3 id="争议-经济学家-李剑阁-我们不能提高劳动者的工资，低工资是我们的优势。老百姓工资太高了，应该降到合理的水平"><a href="#争议-经济学家-李剑阁-我们不能提高劳动者的工资，低工资是我们的优势。老百姓工资太高了，应该降到合理的水平" class="headerlink" title="[*争议-经济学家-李剑阁] 我们不能提高劳动者的工资，低工资是我们的优势。老百姓工资太高了，应该降到合理的水平"></a>[*争议-经济学家-李剑阁] 我们不能提高劳动者的工资，低工资是我们的优势。老百姓工资太高了，应该降到合理的水平</h3><p>总结:<br>干过些实事，有钱有权有文化有地位有学识，话说得有些道理，但脱离人民，不管到底说了什么，总之没干过有害人民的事<br>2022年6月1日<br>我们不能提高劳动者的工资，低工资是我们的优势。根据过往经验来看，低价劳动力是我们的优势，所以外资才会选择我们，如果工资提高了，外资就会跑到劳动力更低的越南等东南亚国家。产业链的外移，对于我们经济发展很不利，所以一直保持低工资，一直提供低价劳动力，才能一直赚外汇。<br><a href="https://www.sohu.com/a/580028044_120913760">https://www.sohu.com/a/580028044_120913760</a><br>1.? 李剑阁并非南师大教授：<br>百科信息显示:<br>中国社会科学院研究员 中国社会科学院研究生院教授 清华大学中国经济研究中心特聘研究员 清华大学台湾研究所研究员 中国人民银行研究生部教授 南京师范大学教授 上海财经大学教授</p><p>2.? 敢言且为无声者代言的学者：<br>信息鱼龙混杂无法证实,可证实的是 有钱有权有文化<br>(孙冶方基金会理事长 前国务院发展研究中心副主任 中国社会科学院研究生院经济学硕士)</p><p>3.X断章取义 工人工资不能太高 :<br>原文为<br>2005年11月09日北京晨报道:<br>李剑阁：经济学家不能鼓吹涨工资 会使工人失业.<br>《经济学界出现1992年以来最大一次学术分歧》</p><h2 id="谣言–断章取义或凭空捏造"><a href="#谣言–断章取义或凭空捏造" class="headerlink" title="谣言–断章取义或凭空捏造"></a>谣言–断章取义或凭空捏造</h2><h3 id="谣言-浙江大学医学教授-沈岳良-说吃五花肉不长胖，只有吃米饭才长胖"><a href="#谣言-浙江大学医学教授-沈岳良-说吃五花肉不长胖，只有吃米饭才长胖" class="headerlink" title="[谣言-浙江大学医学教授-沈岳良]说吃五花肉不长胖，只有吃米饭才长胖"></a>[谣言-浙江大学医学教授-沈岳良]说吃五花肉不长胖，只有吃米饭才长胖</h3><p>教授原义: 不能忽视计量</p><h3 id="谣言-北大博士-王福重-农民不要用收割机收麦子，会污染环境"><a href="#谣言-北大博士-王福重-农民不要用收割机收麦子，会污染环境" class="headerlink" title="[谣言-北大博士-王福重] 农民不要用收割机收麦子，会污染环境"></a>[谣言-北大博士-王福重] 农民不要用收割机收麦子，会污染环境</h3><p><img src="/posts/2023/28310/%E7%8E%8B%E7%A6%8F%E9%87%8D-%E6%94%B6%E9%BA%A6%E5%AD%90.avif" alt="王福重怒骂"></p><h3 id="有专家建议-征收失业税，没工作的要交钱"><a href="#有专家建议-征收失业税，没工作的要交钱" class="headerlink" title="[有专家建议] 征收失业税，没工作的要交钱"></a>[有专家建议] 征收失业税，没工作的要交钱</h3><p>草稿</p><p>北大中文系教授臧棣回怼批评者<br>中国现代文学学会会员、武汉大学文学院副教授荣光启</p><p>科学只会被选择性采纳，需要时便是专家建议，不被需要则是谣言.</p><p>北京“明天起全面放开”？官方辟谣<br>发布日期 2022.12.3<br>相关链接 <a href="https://b23.tv/FxKzKRu">https://b23.tv/FxKzKRu</a><br>实际情况 北京后天起全面放开</p>]]></content>
    
    
    <categories>
      
      <category>持续更新中</category>
      
    </categories>
    
    
    <tags>
      
      <tag>中国</tag>
      
      <tag>时事</tag>
      
      <tag>政治</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>配置一个漂亮的 Windows PowerShell | Windows Terminal Preview 美化&amp;个性化</title>
    <link href="/posts/2021/39178/"/>
    <url>/posts/2021/39178/</url>
    
    <content type="html"><![CDATA[<!-- ## 完成效果 --><p><img src="/posts/2021/39178/uTools_1635574749923.png" alt="完成效果"></p><h2 id="0-准备所需文件"><a href="#0-准备所需文件" class="headerlink" title="0. 准备所需文件"></a>0. 准备所需文件</h2><ul><li><p>Windows Terminal Preview</p><ul><li>可以在 GitHub 或 Microsoft Store 获取</li></ul></li><li><p>[PowerShell] (<a href="https://aka.ms/pscore6">https://aka.ms/pscore6</a>)</p><ul><li>一个跨平台的 PowerShell</li></ul></li><li><p>[Git Bash] (<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a>)</p><ul><li>可集成在 Windows Terminal Preview 中</li></ul></li></ul><h2 id="1-基础设置调整"><a href="#1-基础设置调整" class="headerlink" title="1. 基础设置调整"></a>1. 基础设置调整</h2><h3 id="开启-Terminal-亚克力半透明效果为80"><a href="#开启-Terminal-亚克力半透明效果为80" class="headerlink" title="开启 Terminal  亚克力半透明效果为80%"></a>开启 Terminal  亚克力半透明效果为80%</h3><p><img src="/posts/2021/39178/image-20211030143820010.png" alt="image-亚克力半透明效果"></p><h3 id="选择-Terminal-配色方案"><a href="#选择-Terminal-配色方案" class="headerlink" title="选择 Terminal  配色方案"></a>选择 Terminal  配色方案</h3><p>设置&gt;默认值&gt;外观&gt;配色方案</p><p>我选择 One Half Dark</p><p><img src="/posts/2021/39178/image-20211030151624811.png" alt="image-配色方案"></p><h3 id="集成-Git-Bash"><a href="#集成-Git-Bash" class="headerlink" title="集成 Git Bash"></a>集成 Git Bash</h3><h4 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">Git Bash<br></code></pre></td></tr></table></figure><h4 id="命令行-根据安装目录而定"><a href="#命令行-根据安装目录而定" class="headerlink" title="命令行: (根据安装目录而定)"></a>命令行: (根据安装目录而定)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">D:\Program Files\git\bin\bash.exe<br></code></pre></td></tr></table></figure><h4 id="启动目录-默认"><a href="#启动目录-默认" class="headerlink" title="启动目录: (默认)"></a>启动目录: (默认)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">%</span><span class="language-bash">USERPROFILE%</span><br></code></pre></td></tr></table></figure><h4 id="图标-根据安装目录而定"><a href="#图标-根据安装目录而定" class="headerlink" title="图标: (根据安装目录而定)"></a>图标: (根据安装目录而定)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">D:\Program Files\git\mingw64\share\git\git-for-windows.ico<br></code></pre></td></tr></table></figure><h2 id="2-安装-nerd-字体"><a href="#2-安装-nerd-字体" class="headerlink" title="2. 安装 nerd 字体"></a>2. 安装 nerd 字体</h2><p>安装 nerd 以显示图标， 不然会显示为方框</p><p><a href="https://www.nerdfonts.com/font-downloads">可以在这里挑选并获取喜欢的字体</a></p><p>我选择 <a href="https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/JetBrainsMono.zip">JetBrainsMono Nerd Font Mono</a></p><p><img src="/posts/2021/39178/image-20211030151437944.png" alt="image-20211030151437944"></p><p>在 Terminal  使用字体 (注意要选择带 nerd 字样的字体)</p><p>设置&gt;默认值&gt;外观&gt;字体:</p><p><img src="/posts/2021/39178/image-20211030151624811.png" alt="image-设置字体"></p><h2 id="3-主题设置"><a href="#3-主题设置" class="headerlink" title="3. 主题设置"></a>3. 主题设置</h2><p>参考: <sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="“powershell.md”">[1]</span></a></sup>  </p><h3 id="安装模块"><a href="#安装模块" class="headerlink" title="安装模块"></a>安装模块</h3><h4 id="主题美化模块-oh-my-posh"><a href="#主题美化模块-oh-my-posh" class="headerlink" title="主题美化模块 oh-my-posh"></a>主题美化模块 oh-my-posh</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">Install-Module oh-my-posh -Scope CurrentUser -SkipPublisherCheck<br></code></pre></td></tr></table></figure><h4 id="posh-git-模块"><a href="#posh-git-模块" class="headerlink" title="posh-git 模块"></a>posh-git 模块</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">Install-Module posh-git -Scope CurrentUser<br></code></pre></td></tr></table></figure><h4 id="增强模块-PSReadLine"><a href="#增强模块-PSReadLine" class="headerlink" title="增强模块 PSReadLine"></a>增强模块 PSReadLine</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">Install-Module -Name PSReadLine -AllowPrerelease -Scope CurrentUser -Force -SkipPublisherCheck<br></code></pre></td></tr></table></figure><h4 id="文件图标库"><a href="#文件图标库" class="headerlink" title="文件图标库"></a>文件图标库</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">Install-Module -Name Terminal-Icons -Repository PSGallery<br></code></pre></td></tr></table></figure><h3 id="配置-Profile-打开方式二选一"><a href="#配置-Profile-打开方式二选一" class="headerlink" title="配置 Profile (打开方式二选一)"></a>配置 Profile (打开方式二选一)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">notepad.exe $PROFILE<br>code $PROFILE<br></code></pre></td></tr></table></figure><p>在本段中，以下操作均在 $PROFILE 文件中操作</p><p>导入主题模块和图标库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">Import-Module posh-git<br>Import-Module oh-my-posh<br>Import-Module -Name Terminal-Icons<br></code></pre></td></tr></table></figure><h3 id="设置主题-主题库"><a href="#设置主题-主题库" class="headerlink" title="设置主题 (主题库)"></a>设置主题 (<a href="https://ohmyposh.dev/docs/themes">主题库</a>)</h3><p>我选择使用 <a href="https://ohmyposh.dev/docs/themes#m365princess">M365Princess</a>主题</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">Set-PoshPrompt -Theme M365Princess<br></code></pre></td></tr></table></figure><h3 id="自动补全和提示"><a href="#自动补全和提示" class="headerlink" title="自动补全和提示"></a>自动补全和提示</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">Set-PSReadlineKeyHandler -Key Tab -Function MenuComplete<br></code></pre></td></tr></table></figure><p>完成后记得保存</p><h3 id="以下为完整文件及截图"><a href="#以下为完整文件及截图" class="headerlink" title="以下为完整文件及截图"></a>以下为完整文件及截图</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">Import-Module posh-git<br>Import-Module oh-my-posh<br>Set-PoshPrompt -Theme M365Princess<br>Set-PSReadlineKeyHandler -Key Tab -Function MenuComplete<br></code></pre></td></tr></table></figure><p><img src="/posts/2021/39178/Snipaste_2021-10-30_15-07-33.png" alt="完整文件截图"></p><h3 id="重新打开-Terminal"><a href="#重新打开-Terminal" class="headerlink" title="重新打开 Terminal"></a>重新打开 Terminal</h3><h2 id="完成啦-0-◇-0-x2F"><a href="#完成啦-0-◇-0-x2F" class="headerlink" title="完成啦(0^◇^0)&#x2F;"></a>完成啦(0^◇^0)&#x2F;</h2><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://gist.github.com/xiaopeng163/0fe4225a56ff97cd47e25a4b8a6f36ec">“powershell.md”</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    
    <tags>
      
      <tag>PowerShell</tag>
      
      <tag>美化&amp;个性化</tag>
      
      <tag>配置</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/posts/2021/3eeb/"/>
    <url>/posts/2021/3eeb/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <categories>
      
      <category>test</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
